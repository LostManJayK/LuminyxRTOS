ARM GAS  /tmp/ccUTsqgI.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"LED.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/LED.c"
  18              		.section	.text.LEDInit,"ax",%progbits
  19              		.align	1
  20              		.global	LEDInit
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	LEDInit:
  26              	.LFB49:
   1:Src/LED.c     **** #include "LED.h"
   2:Src/LED.c     **** 
   3:Src/LED.c     **** #define GPIOAEN (0b1 << 0)
   4:Src/LED.c     **** #define OD5 (0b1 << 5)
   5:Src/LED.c     **** 
   6:Src/LED.c     **** void LEDInit(void)
   7:Src/LED.c     **** {
  27              		.loc 1 7 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
   8:Src/LED.c     ****     //Enable GPIOA clock
   9:Src/LED.c     ****     RCC->IOPENR |= GPIOAEN;
  39              		.loc 1 9 8
  40 0004 0C4B     		ldr	r3, .L2
  41 0006 5A6B     		ldr	r2, [r3, #52]
  42 0008 0B4B     		ldr	r3, .L2
  43              		.loc 1 9 17
  44 000a 0121     		movs	r1, #1
  45 000c 0A43     		orrs	r2, r1
  46 000e 5A63     		str	r2, [r3, #52]
  10:Src/LED.c     **** 
  11:Src/LED.c     ****     //Set PA5 to output
  12:Src/LED.c     ****     GPIOA->MODER |= (1U<<10);
ARM GAS  /tmp/ccUTsqgI.s 			page 2


  47              		.loc 1 12 10
  48 0010 A023     		movs	r3, #160
  49 0012 DB05     		lsls	r3, r3, #23
  50 0014 1A68     		ldr	r2, [r3]
  51 0016 A023     		movs	r3, #160
  52 0018 DB05     		lsls	r3, r3, #23
  53              		.loc 1 12 18
  54 001a 8021     		movs	r1, #128
  55 001c C900     		lsls	r1, r1, #3
  56 001e 0A43     		orrs	r2, r1
  57 0020 1A60     		str	r2, [r3]
  13:Src/LED.c     ****     GPIOA->MODER &= ~(1U<<11);
  58              		.loc 1 13 10
  59 0022 A023     		movs	r3, #160
  60 0024 DB05     		lsls	r3, r3, #23
  61 0026 1A68     		ldr	r2, [r3]
  62 0028 A023     		movs	r3, #160
  63 002a DB05     		lsls	r3, r3, #23
  64              		.loc 1 13 18
  65 002c 0349     		ldr	r1, .L2+4
  66 002e 0A40     		ands	r2, r1
  67 0030 1A60     		str	r2, [r3]
  14:Src/LED.c     **** }
  68              		.loc 1 14 1
  69 0032 C046     		nop
  70 0034 BD46     		mov	sp, r7
  71              		@ sp needed
  72 0036 80BD     		pop	{r7, pc}
  73              	.L3:
  74              		.align	2
  75              	.L2:
  76 0038 00100240 		.word	1073876992
  77 003c FFF7FFFF 		.word	-2049
  78              		.cfi_endproc
  79              	.LFE49:
  81              		.section	.text.LEDOn,"ax",%progbits
  82              		.align	1
  83              		.global	LEDOn
  84              		.syntax unified
  85              		.code	16
  86              		.thumb_func
  88              	LEDOn:
  89              	.LFB50:
  15:Src/LED.c     **** 
  16:Src/LED.c     **** void LEDOn(void)
  17:Src/LED.c     **** {
  90              		.loc 1 17 1
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0002 00AF     		add	r7, sp, #0
 100              	.LCFI3:
ARM GAS  /tmp/ccUTsqgI.s 			page 3


 101              		.cfi_def_cfa_register 7
  18:Src/LED.c     ****     //Set LED pin high
  19:Src/LED.c     ****     GPIOA->ODR |= OD5;
 102              		.loc 1 19 10
 103 0004 A023     		movs	r3, #160
 104 0006 DB05     		lsls	r3, r3, #23
 105 0008 5A69     		ldr	r2, [r3, #20]
 106 000a A023     		movs	r3, #160
 107 000c DB05     		lsls	r3, r3, #23
 108              		.loc 1 19 16
 109 000e 2021     		movs	r1, #32
 110 0010 0A43     		orrs	r2, r1
 111 0012 5A61     		str	r2, [r3, #20]
  20:Src/LED.c     **** }
 112              		.loc 1 20 1
 113 0014 C046     		nop
 114 0016 BD46     		mov	sp, r7
 115              		@ sp needed
 116 0018 80BD     		pop	{r7, pc}
 117              		.cfi_endproc
 118              	.LFE50:
 120              		.section	.text.LEDOff,"ax",%progbits
 121              		.align	1
 122              		.global	LEDOff
 123              		.syntax unified
 124              		.code	16
 125              		.thumb_func
 127              	LEDOff:
 128              	.LFB51:
  21:Src/LED.c     **** 
  22:Src/LED.c     **** void LEDOff(void)
  23:Src/LED.c     **** {
 129              		.loc 1 23 1
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133 0000 80B5     		push	{r7, lr}
 134              	.LCFI4:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 00AF     		add	r7, sp, #0
 139              	.LCFI5:
 140              		.cfi_def_cfa_register 7
  24:Src/LED.c     ****     //Set LED pin off
  25:Src/LED.c     ****     GPIOA->ODR &= ~(OD5);
 141              		.loc 1 25 10
 142 0004 A023     		movs	r3, #160
 143 0006 DB05     		lsls	r3, r3, #23
 144 0008 5A69     		ldr	r2, [r3, #20]
 145 000a A023     		movs	r3, #160
 146 000c DB05     		lsls	r3, r3, #23
 147              		.loc 1 25 16
 148 000e 2021     		movs	r1, #32
 149 0010 8A43     		bics	r2, r1
 150 0012 5A61     		str	r2, [r3, #20]
  26:Src/LED.c     **** }
ARM GAS  /tmp/ccUTsqgI.s 			page 4


 151              		.loc 1 26 1
 152 0014 C046     		nop
 153 0016 BD46     		mov	sp, r7
 154              		@ sp needed
 155 0018 80BD     		pop	{r7, pc}
 156              		.cfi_endproc
 157              	.LFE51:
 159              		.section	.text.LEDToggle,"ax",%progbits
 160              		.align	1
 161              		.global	LEDToggle
 162              		.syntax unified
 163              		.code	16
 164              		.thumb_func
 166              	LEDToggle:
 167              	.LFB52:
  27:Src/LED.c     **** 
  28:Src/LED.c     **** void LEDToggle(void)
  29:Src/LED.c     **** {
 168              		.loc 1 29 1
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 80B5     		push	{r7, lr}
 173              	.LCFI6:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 00AF     		add	r7, sp, #0
 178              	.LCFI7:
 179              		.cfi_def_cfa_register 7
  30:Src/LED.c     ****     //Write LED pin to oposite value
  31:Src/LED.c     ****     GPIOA->ODR ^= OD5;
 180              		.loc 1 31 10
 181 0004 A023     		movs	r3, #160
 182 0006 DB05     		lsls	r3, r3, #23
 183 0008 5A69     		ldr	r2, [r3, #20]
 184 000a A023     		movs	r3, #160
 185 000c DB05     		lsls	r3, r3, #23
 186              		.loc 1 31 16
 187 000e 2021     		movs	r1, #32
 188 0010 4A40     		eors	r2, r1
 189 0012 5A61     		str	r2, [r3, #20]
  32:Src/LED.c     **** }
 190              		.loc 1 32 1
 191 0014 C046     		nop
 192 0016 BD46     		mov	sp, r7
 193              		@ sp needed
 194 0018 80BD     		pop	{r7, pc}
 195              		.cfi_endproc
 196              	.LFE52:
 198              		.text
 199              	.Letext0:
 200              		.file 2 "/home/luminyx/Documents/Dev/Embedded/Setup/arm-gnu-toolchain/arm-none-eabi/include/machin
 201              		.file 3 "/home/luminyx/Documents/Dev/Embedded/Setup/arm-gnu-toolchain/arm-none-eabi/include/sys/_s
 202              		.file 4 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c031xx.h"
ARM GAS  /tmp/ccUTsqgI.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 LED.c
     /tmp/ccUTsqgI.s:19     .text.LEDInit:00000000 $t
     /tmp/ccUTsqgI.s:25     .text.LEDInit:00000000 LEDInit
     /tmp/ccUTsqgI.s:76     .text.LEDInit:00000038 $d
     /tmp/ccUTsqgI.s:82     .text.LEDOn:00000000 $t
     /tmp/ccUTsqgI.s:88     .text.LEDOn:00000000 LEDOn
     /tmp/ccUTsqgI.s:121    .text.LEDOff:00000000 $t
     /tmp/ccUTsqgI.s:127    .text.LEDOff:00000000 LEDOff
     /tmp/ccUTsqgI.s:160    .text.LEDToggle:00000000 $t
     /tmp/ccUTsqgI.s:166    .text.LEDToggle:00000000 LEDToggle

NO UNDEFINED SYMBOLS
